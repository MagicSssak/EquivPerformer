test points sampled
ModuleList(
  (0): GSE3Res(
    (GBN): ModuleDict()
    (GLNR): ModuleDict()
    (GMAB): ModuleDict(
      (v): GConvSE3Partial(structure=[(32, 0), (32, 1), (32, 2)])
      (k): GConvSE3Partial(structure=[(32, 1)])
      (q): GConvSE3Partial(structure=[(32, 1)])
      (attn): GMABSE3(n_heads=16, structure=[(32, 0), (32, 1), (32, 2)])
    )
    (cat): GCat(structure=[(32, 0), (33, 1), (32, 2)])
    (project): G1x1SE3(structure=[(32, 0), (32, 1), (32, 2)])
  )
  (1): GNormTFN()
  (2): GSE3Res(
    (GBN): ModuleDict()
    (GLNR): ModuleDict()
    (GMAB): ModuleDict(
      (v): GConvSE3Partial(structure=[(32, 0), (32, 1), (32, 2)])
      (k): GConvSE3Partial(structure=[(32, 0), (32, 1), (32, 2)])
      (q): GConvSE3Partial(structure=[(32, 0), (32, 1), (32, 2)])
      (attn): GMABSE3(n_heads=16, structure=[(32, 0), (32, 1), (32, 2)])
    )
    (cat): GCat(structure=[(64, 0), (64, 1), (64, 2)])
    (project): G1x1SE3(structure=[(32, 0), (32, 1), (32, 2)])
  )
  (3): GNormTFN()
  (4): GSE3Res(
    (GBN): ModuleDict()
    (GLNR): ModuleDict()
    (GMAB): ModuleDict(
      (v): GConvSE3Partial(structure=[(32, 0), (32, 1), (32, 2)])
      (k): GConvSE3Partial(structure=[(32, 0), (32, 1), (32, 2)])
      (q): GConvSE3Partial(structure=[(32, 0), (32, 1), (32, 2)])
      (attn): GMABSE3(n_heads=16, structure=[(32, 0), (32, 1), (32, 2)])
    )
    (cat): GCat(structure=[(64, 0), (64, 1), (64, 2)])
    (project): G1x1SE3(structure=[(32, 0), (32, 1), (32, 2)])
  )
  (5): GNormTFN()
  (6): GSE3Res(
    (GBN): ModuleDict()
    (GLNR): ModuleDict()
    (GMAB): ModuleDict(
      (v): GConvSE3Partial(structure=[(32, 0), (32, 1), (32, 2)])
      (k): GConvSE3Partial(structure=[(32, 0), (32, 1), (32, 2)])
      (q): GConvSE3Partial(structure=[(32, 0), (32, 1), (32, 2)])
      (attn): GMABSE3(n_heads=16, structure=[(32, 0), (32, 1), (32, 2)])
    )
    (cat): GCat(structure=[(64, 0), (64, 1), (64, 2)])
    (project): G1x1SE3(structure=[(32, 0), (32, 1), (32, 2)])
  )
  (7): GNormTFN()
  (8): GSE3Res(
    (GBN): ModuleDict()
    (GLNR): ModuleDict()
    (GMAB): ModuleDict(
      (v): GConvSE3Partial(structure=[(32, 0), (32, 1), (32, 2)])
      (k): GConvSE3Partial(structure=[(32, 0), (32, 1), (32, 2)])
      (q): GConvSE3Partial(structure=[(32, 0), (32, 1), (32, 2)])
      (attn): GMABSE3(n_heads=16, structure=[(32, 0), (32, 1), (32, 2)])
    )
    (cat): GCat(structure=[(64, 0), (64, 1), (64, 2)])
    (project): G1x1SE3(structure=[(32, 0), (32, 1), (32, 2)])
  )
  (9): GNormTFN()
  (10): GSE3Res(
    (GBN): ModuleDict()
    (GLNR): ModuleDict()
    (GMAB): ModuleDict(
      (v): GConvSE3Partial(structure=[(64, 0)])
      (k): GConvSE3Partial(structure=[(64, 0)])
      (q): GConvSE3Partial(structure=[(64, 0)])
      (attn): GMABSE3(n_heads=16, structure=[(64, 0)])
    )
    (cat): GCat(structure=[(96, 0)])
    (project): AttentiveSelfInteractionSE3(in=[(96, 0)], out=[(64, 0)])
  )
)
Total Params: 65159777, trainable params: 65159777
Begin training
Scanobjectnn_4090_256_20_batch16_att_6_32
[0|0] loss: 2.71670
[0|100] loss: 2.59202
training one epoch costs:70.83675813674927s
...[0|test] loss: 2.32451
Acc is {'acc': 0.3385416666666667}
Saved: models/Scanobjectnn_4090_256_20_batch16_att_6_32.pt
Inference costs:7.687853574752808s
[1|0] loss: 2.27200
[1|100] loss: 2.30500
Traceback (most recent call last):
  File "/home/sssak/EquivPerformer/pccls_run.py", line 272, in <module>
    main(FLAGS, UNPARSED_ARGV)
  File "/home/sssak/EquivPerformer/pccls_run.py", line 245, in main
    _, acc_epoch = train_epoch(epoch, model, task_loss, train_loader, optimizer, scheduler, FLAGS)
  File "/home/sssak/EquivPerformer/pccls_run.py", line 73, in train_epoch
    pred = model(g)
  File "/home/sssak/anaconda3/envs/cuda/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/sssak/EquivPerformer/experiments/pc3d/pccls_models.py", line 99, in forward
    global_enc = layer(global_enc, G=G, r=global_r, basis=global_basis)
  File "/home/sssak/anaconda3/envs/cuda/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/sssak/EquivPerformer/equivariant_attention/modules.py", line 954, in forward
    q = self.GMAB['q'](features, G=G, **kwargs)
  File "/home/sssak/anaconda3/envs/cuda/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/sssak/EquivPerformer/equivariant_attention/modules.py", line 708, in forward
    unary = self.kernel_unary[etype](feat, basis)
  File "/home/sssak/anaconda3/envs/cuda/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/sssak/EquivPerformer/equivariant_attention/modules.py", line 324, in forward
    R = self.rp(feat)
  File "/home/sssak/anaconda3/envs/cuda/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/sssak/EquivPerformer/equivariant_attention/modules.py", line 286, in forward
    y = self.net(x)
  File "/home/sssak/anaconda3/envs/cuda/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/sssak/anaconda3/envs/cuda/lib/python3.10/site-packages/torch/nn/modules/container.py", line 204, in forward
    input = module(input)
  File "/home/sssak/anaconda3/envs/cuda/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1189, in _call_impl
    forward_call = (self._slow_forward if torch._C._get_tracing_state() else self.forward)
KeyboardInterrupt